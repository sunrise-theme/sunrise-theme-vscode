{
  "name": "Sunrise Dark Bold - Beta",
  "type": "dark",
  "colors": {
    "activityBar.background": "",
    "activityBar.foreground": "",
    "activityBarBadge.background": "",
    "activityBarBadge.foreground": "",
    "badge.background": "",
    "badge.foreground": "",
    "button.background": "",
    "button.foreground": "",
    "button.hoverBackground": "",
    "diffEditor.insertedTextBackground": "",
    "diffEditor.removedTextBackground": "",
    "editor.background": "",
    "editor.findMatchBackground": "",
    "editor.findMatchHighlightBackground": "",
    "editor.foreground": "",
    "editor.inactiveSelectionBackground": "",
    "editor.lineHighlightBackground": "",
    "editor.selectionBackground": "",
    "editor.selectionHighlightBackground": "",
    "editor.wordHighlightBackground": "",
    "editor.wordHighlightStrongBackground": "",
    "editorCodeLens.foreground": "",
    "editorCursor.foreground": "",
    "editorError.border": "",
    "editorError.foreground": "",
    "editorGutter.addedBackground": "",
    "editorGutter.deletedBackground": "",
    "editorGutter.modifiedBackground": "",
    "editorHoverWidget.background": "",
    "editorOverviewRuler.addedForeground": "",
    "editorOverviewRuler.border": "",
    "editorOverviewRuler.deletedForeground": "",
    "editorOverviewRuler.errorForeground": "",
    "editorOverviewRuler.infoForeground": "",
    "editorOverviewRuler.modifiedForeground": "",
    "editorOverviewRuler.warningForeground": "",
    "editorRuler.foreground": "",
    "editorSuggestWidget.selectedBackground": "",
    "editorWarning.border": "",
    "editorWarning.foreground": "",
    "editorWhitespace.foreground": "",
    "editorWidget.background": "",
    "editorWidget.border": "",
    "extensionButton.prominentBackground": "",
    "extensionButton.prominentForeground": "",
    "extensionButton.prominentHoverBackground": "",
    "gitDecoration.ignoredResourceForeground": "",
    "list.activeSelectionBackground": "",
    "list.activeSelectionForeground": "",
    "list.focusBackground": "",
    "list.focusForeground": "",
    "list.highlightForeground": "",
    "list.hoverBackground": "",
    "list.hoverForeground": "",
    "list.inactiveSelectionBackground": "",
    "list.inactiveSelectionForeground": "",
    "merge.currentContentBackground": "",
    "merge.currentHeaderBackground": "",
    "merge.incomingContentBackground": "",
    "merge.incomingHeaderBackground": "",
    "progressBar.background": "",
    "scrollbar.shadow": "",
    "scrollbarSlider.activeBackground": "",
    "scrollbarSlider.background": "",
    "scrollbarSlider.hoverBackground": "",
    "sideBar.background": "",
    "sideBar.border": "",
    "sideBar.foreground": "",
    "statusBar.background": "",
    "statusBar.debuggingBackground": "",
    "statusBar.debuggingBorder": "",
    "statusBar.foreground": "",
    "statusBar.noFolderBackground": "",
    "statusBar.noFolderForeground": "",
    "terminal.ansiBlue": "",
    "terminal.ansiBrightBlack": "",
    "terminal.ansiBrightBlue": "",
    "terminal.ansiBrightCyan": "",
    "terminal.ansiBrightGreen": "",
    "terminal.ansiBrightMagent": "",
    "terminal.ansiBrightRed": "",
    "terminal.ansiBrightWhite": "",
    "terminal.ansiBrightYellow": "",
    "terminal.ansiCyan": "",
    "terminal.ansiGreen": "",
    "terminal.ansiMagent": "",
    "terminal.ansiRed": "",
    "terminal.ansiWhite": "",
    "terminal.ansiYellow": "",
    "terminal.background": "",
    "terminal.border": "",
    "terminal.foreground": "",
    "terminal.selectionBackground": "",
    "terminalCursor.background": "",
    "terminalCursor.foreground": "",
    "titleBar.activeBackground": "",
    "titleBar.activeForeground": "",
    "titleBar.inactiveBackground": "",
    "titleBar.inactiveForeground": ""
  },
  "tokenColors": [
    {
      "name": "Generic <comment> matches",
      "scope": "comment",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Generic <constant> matches",
      "scope": "constant",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Makes true/false booleans, null, undefined blue",
      "scope": "constant.language",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Regex, Escape characters `\\`",
      "scope": "constant.character.escape",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Named entities",
      "scope": "entity.name",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Tags",
      "scope": "entity.name.tag",
      "settings": {
        "foreground": "",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Static types",
      "scope": [
        "entity.name.type",
        "storage.type.cs"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Variable names",
      "scope": [
        "entity.name.variable",
        "variable"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Function names",
      "scope": "entity.name.function",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Class extensions eg extends `Component`",
      "scope": "entity.other.inherited-class",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "YAML keys",
      "scope": "entity.name.tag.yaml",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Invalid or illegal",
      "scope": "invalid.illegal",
      "settings": {
        "border-bottom": "1px dashed rgba(255, 44, 109, 0.5)"
      }
    },
    {
      "name": "Invalid or deprecated",
      "scope": "invalid.deprecated",
      "settings": {
        "background-foreground": "rgba(255, 44, 109, 0.62)"
      }
    },
    {
      "name": "Generic <keyword> matches",
      "scope": "keyword",
      "settings": {
        "foreground": "",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Make operators light gray by default",
      "scope": "keyword.operator",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Special operators like `import`, `return`, `if`, `else`, `new` keyword",
      "scope": [
        "keyword.control",
        "keyword.operator.new",
        "keyword.operator.expression",
        "keyword.operator.logical",
        "keyword.operator.delete"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Make logical operators light orange, eg ||, ===",
      "scope": "keyword.operator.logical, keyword.operator.comparison",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup headings",
      "scope": [
        "markup.heading",
        "entity.name.section"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup bold",
      "scope": "markup.bold",
      "settings": {
        "foreground": "",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Markup italics",
      "scope": "markup.italic",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markup code",
      "scope": [
        "markup.inline.raw",
        "markup.fenced_code.block"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup links",
      "scope": "markup.underline.link",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup punctuation definition bold",
      "scope": "punctuation.definition.bold.markdown",
      "settings": {
        "foreground": "",
        "font-weight": "bold"
      }
    },
    {
      "name": "Markup changes",
      "scope": "markup.changed",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup deletes",
      "scope": "markup.deleted",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Italic Text",
      "scope": "markup.italic",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markup punctuation definition italic",
      "scope": "punctuation.definition.italic.markdown",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markup insert",
      "scope": "markup.inserted",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS Class/Method decorators -> @ punctuation is orange",
      "scope": "meta.decorator punctuation.decorator",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS Class/Method decorators -> blue function name",
      "scope": "meta.decorator variable",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Template expressions ${}",
      "scope": "punctuation.definition.template-expression",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Key/value separators",
      "scope": "punctuation.separator",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Embedded section punctuation",
      "scope": "punctuation.section.embedded",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup list punctuation",
      "scope": "punctuation.definition.list",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Generic <storage> matches",
      "scope": "storage",
      "settings": {
        "foreground": "",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Generic string match",
      "scope": "string",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Provided (support) values",
      "scope": "support",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Matches a Class reference when referenced later",
      "scope": "support.class",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Matches MODULE, MODULE.EXPORTS",
      "scope": "support.type.object.module.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Provided functions",
      "scope": "support.function",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Provieded variables",
      "scope": "support.variable",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Object/JSON property names",
      "scope": [
        "support.type.property-name",
        "meta.object-literal.key"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "CSS property names",
      "scope": "support.type.property-name.css",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Generic <variable> matches",
      "scope": "variable",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Function parameters",
      "scope": "variable.parameter",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Destructuring assignment variables",
      "scope": "meta.object-binding-pattern-variable.js variable",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Special treatment for CONSTANT variables and this, variable interpolation matches?",
      "scope": "variable.other.constant, variable.language.this, variable.interpolation",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Language variables",
      "scope": "variable.language",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Matches when an object is accessed.",
      "scope": "variable.other.object",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "The accessed property match",
      "scope": "variable.other.property",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Docker file `FROM`",
      "scope": "keyword.other.special-method",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Expressions like @import",
      "scope": "keyword.control.at-rule",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Style !important declarations",
      "scope": "keyword.other.important",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Variable interpolation",
      "scope": "variable.interpolation",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "CSS tags",
      "scope": "entity.name.tag.css",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "CSS ID selectors",
      "scope": "entity.other.attribute-name.id",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Pseudo CSS",
      "scope": [
        "entity.other.attribute-name.pseudo-element",
        "entity.other.attribute-name.pseudo-class"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Property names",
      "scope": "support.type.property-name.css",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Variables",
      "scope": "variable.scss",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "SCSS tags",
      "scope": "entity.name.tag.reference.scss",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Units",
      "scope": "keyword.other.unit",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "CSS rem, vh, px, em, deg and percentage",
      "scope": [
        "keyword.other.unit.rem.css,",
        "keyword.other.unit.vh.css,",
        "keyword.other.unit.px.css,",
        "keyword.other.unit.em.css,",
        "keyword.other.unit.deg.css,",
        "keyword.other.unit.percentage.css"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "HTML, Jade metas, tags, html, script and jade",
      "scope": "meta.tag.structure.any.html, meta.tag.other.html, entity.name.tag.html, meta.tag.metadata.script.html, entity.name.tag.jade",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Inline, block and localname",
      "scope": "entity.name.tag.inline.any.html, entity.name.tag.other.html, entity.name.tag.block.any.html, entity.name.tag.localname.xml",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "XML tags",
      "scope": "entity.name.tag.xml, meta.tag.xml",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Vue tags",
      "scope": "source.vue, entity.name.tag.pug, meta.tag.other",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Text pug",
      "scope": "text.pug",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS type class",
      "scope": "entity.name.type.class.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS control as",
      "scope": "keyword.control.as.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS control from",
      "scope": "keyword.control.from.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS control export",
      "scope": "keyword.control.export.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JS variable language this",
      "scope": "variable.language.this.js",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "JS console",
      "scope": "support.class.console.js",
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "JS alias",
      "scope": "variable.other.readwrite.alias.js.jsx",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JSX tags and components",
      "scope": "entity.name.tag.js, support.class.component.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "JSX super",
      "scope": "variable.language.super.js",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Make JSDoc comments font normal for better readablility",
      "scope": "comment.block.documentation",
      "settings": {
        "fontStyle": "normal"
      }
    },
    {
      "name": "Tags with type defs curly punctation",
      "scope": "entity.name.type.instance.jsdoc punctuation.definition",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Type def and method/prop NAMES",
      "scope": "entity.name.type.instance.jsdoc",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Built in JSdoc block tags",
      "scope": "comment.block storage",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Custom doc tags, tag defaults, tag default strings",
      "scope": "comment.block storage.custom, variable.other.jsdoc, variable.other.jsdoc punctuation.definition.string",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Headings Punctuation",
      "scope": "punctuation.definition.heading",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Headings Text",
      "scope": "entity.name.section.markdown",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Block Quotes",
      "scope": "markup.quote",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup quotes",
      "scope": "markup.quote",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Inline code blocks `code`",
      "scope": "markup.inline.raw",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "List punctuation -",
      "scope": "beginning.punctuation.definition.list",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Fenced code blocks",
      "scope": "markup.fenced_code.block.markdown punctuation.definition.markdown",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Fenced code block languages",
      "scope": "fenced_code.block.language",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Other string links",
      "scope": "string.other.link",
      "settings": {
        "foreground": "",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Markdown links",
      "scope": "meta.link.inline.markdown",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "Text, HTML, Markdown string punctuation definitions",
      "scope": "text.html.markdown punctuation.definition.string",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Component names",
      "scope": "support.class.component",
      "settings": {
        "foreground": "",
        "fontStyle": "italic"
      }
    },
    {
      "name": "HTML tag names",
      "scope": "meta.tag.js entity.name.tag",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "HTML and Component attribute's name",
      "scope": "entity.other.attribute-name",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Tag attributes",
      "scope": "entity.other.attribute-name",
      "settings": {
        "foreground": "",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Strings",
      "scope": [
        "string.quoted",
        "string.template"
      ],
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Embedded template punctuation",
      "scope": "string.template meta.embedded",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Regex",
      "scope": "string.regexp",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Markup link descriptions",
      "scope": "string.other.link",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Parent match",
      "scope": "string.regexp",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Hit word boundary and back references",
      "scope": "string.regexp keyword, string.regexp keyword.control",
      "settings": {
        "foreground": "",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Operators like +, ?",
      "scope": "string.regexp keyword.operator",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Tagged template hbs``",
      "scope": "meta.source.handlebars entity.name.tag",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "\\{\\{, \\{\\{\\{, () and </>",
      "scope": "punctuation.definition.expression, punctuation.definition.subexpression, punctuation.definition.block.unescaped, punctuation.definition.tag",
      "settings": {
        "fontStyle": "italic",
        "foreground": ""
      }
    },
    {
      "name": "Tag brackets",
      "scope": "punctuation.definition.tag",
      "settings": {
        "foreground": "",
        "fontStyle": "normal"
      }
    },
    {
      "name": "Expression Name,",
      "scope": "entity.name.function.expression",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Unescaped value",
      "scope": "entity.unescaped.expression",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Matches pipes in as expressions",
      "scope": "constant.other.symbol",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Expression parameter NAME",
      "scope": "entity.expression variable.parameter.name",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Expression parameter VALUE",
      "scope": "entity.expression variable.parameter.value",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "Ember built in helpers",
      "scope": "entity.expression support.function.builtin",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "HTML tag names",
      "scope": "entity.name.tag.html",
      "settings": {
        "foreground": ""
      }
    },
    {
      "name": "HTML attribute NAME",
      "scope": "entity.other.attribute-name.handlebars",
      "settings": {
        "foreground": ""
      }
    }
  ]
}
